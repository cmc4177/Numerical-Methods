%*****************************************************************************%DSP Short Course: E. R. Salem Associates%6/27/96%Program ConvDemo1.m%This program demonstrates the superposition interpretation of the%discrete convolution sum equation%*****************************************************************************%Define n axis vector, input vectors and impulse response vectors%************************************************************************clearn = [0 1 2 3 4 5 6 7];nx = [0 1 2 3 4];x =  [1 2 3 2 1];x1 = [1 0 0 0 0];x2 = [0 2 0 0 0];x3 = [0 0 3 0 0];x4 = [0 0 0 2 0];x5 = [0 0 0 0 1];h =  [1 .5 .25];h1 = [1 .5 .25  0   0   0   0  0];h2 = [0  1 .5  .25  0   0   0  0];h3 = [0  0  1  .5  .25  0   0  0];h4 = [0  0  0   1  .5  .25  0  0];h5 = [0  0  0   0   1  .5  .25 0];%Compute output, y, as uperposition of scaled shifted impulse responses%********************************************************************** y = x(1)*h1 + x(2)*h2 + x(3)*h3 + x(4)*h4 +x(5)*h5;%Plot input, impulse response and output and wait%************************************************clffigure(gcf)subplot(3,1,1), stem(n,[x 0 0 0]), grid, ylabel('input: x(n)');subplot(3,1,2), stem(n,h1), grid, ylabel('impulse resp: h(n)');subplot(3,1,3), stem(n,y), grid, ylabel('output: y(n)');pause;%Now plot individual components of input, output, and final sums%***************************************************************clffigure(gcf)subplot(6,2,1), stem(nx, x1), axis([0 5 0 3]), grid, ylabel('x(0)');subplot(6,2,2), stem(n, x(1)*h1), axis([0 7 0 3]), grid, ylabel('x(0)*h(n)');pausesubplot(6,2,3), stem(nx, x2), axis([0 5 0 3]), grid, ylabel('x(1)');subplot(6,2,4), stem(n, x(2)*h2), axis([0 7 0 3]), grid, ylabel('x(1)*h(n-1)');pausesubplot(6,2,5), stem(nx, x3), axis([0 5 0 3]), grid, ylabel('x(2)');subplot(6,2,6), stem(n, x(3)*h3), axis([0 7 0 3]), grid, ylabel('x(2)*h(n-2)');pausesubplot(6,2,7), stem(nx, x4), axis([0 5 0 3]), grid, ylabel('x(3)');subplot(6,2,8), stem(n, x(4)*h4), axis([0 7 0 3]), grid, ylabel('x(3)*h(n-3)');pausesubplot(6,2,9), stem(nx, x5), axis([0 5 0 3]), grid, ylabel('x(4)');subplot(6,2,10), stem(n, x(5)*h5), axis([0 7 0 3]), grid, ylabel('x(4)*h(n-4)');pausesubplot(6,2,11), stem(nx, x), axis([0 5 0 3]), grid, ylabel('input: x(n)');subplot(6,2,12), stem(n, y,':'), axis([0 7 0 5]), grid, ylabel('output: y(n)');